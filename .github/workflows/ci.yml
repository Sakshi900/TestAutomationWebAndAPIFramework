name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:

permissions:
  contents: write    # required to push to gh-pages
  pages: write       # required for GitHub Pages
  id-token: write    # required for GitHub Pages

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Run tests with Maven
        run: mvn -B clean test -Dheadless=true

      - name: Upload Allure raw results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: target/allure-results

  allure-report:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: always()
    steps:
      - uses: actions/checkout@v4

      - name: Download Allure raw results
        uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: allure-results

      - name: Set up Allure CLI
        run: |
          curl -o allure-commandline.tgz -Ls https://github.com/allure-framework/allure2/releases/download/2.26.0/allure-2.26.0.tgz
          tar -xzf allure-commandline.tgz
          echo "$PWD/allure-2.26.0/bin" >> $GITHUB_PATH

      - name: Generate Allure HTML
        run: allure generate allure-results -o allure-report --clean

      - name: Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
